{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Express TypeORM API",
    "description": "Sample API documentation"
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "News",
      "description": "Operations about news articles"
    },
    {
      "name": "Auth",
      "description": "Operations related to authentication"
    },
    {
      "name": "Categories",
      "description": "Operations about categories"
    }
  ],
  "paths": {
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news",
        "responses": {
          "200": {
            "description": "List of news articles",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/News"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["News"],
        "summary": "Create a news article",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/News"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created news article"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/news/{id}": {
      "get": {
        "tags": ["News"],
        "summary": "Get a news article by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "News article",
            "schema": {
              "$ref": "#/definitions/News"
            }
          },
          "404": {
            "description": "News not found"
          }
        }
      },
      "put": {
        "tags": ["News"],
        "summary": "Update a news article by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/News"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated news article"
          },
          "404": {
            "description": "News not found"
          }
        }
      },
      "delete": {
        "tags": ["News"],
        "summary": "Delete a news article by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "News not found"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logs in a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JWT token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Registers a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "default": "user"
                }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict - Username already exists"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "List of categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created category"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Category",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated category"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    }
  },
  "definitions": {
    "News": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "publishedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["title", "content"]
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": ["name"]
    }
  }
}
