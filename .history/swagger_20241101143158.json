{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Express TypeORM API",
      "description": "Sample API documentation"
    },
    "basePath": "/api",
    "paths": {
      "/news": {
        "get": {
          "summary": "Get all news",
          "responses": {
            "200": {
              "description": "List of news articles"
            }
          }
        },
        "post": {
          "summary": "Create a news article",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/News"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created news article"
            }
          }
        }
      },
      "/news/{id}": {
        "get": {
          "summary": "Get a news article by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "News article"
            }
          }
        },
        "put": {
          "summary": "Update a news article by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "$ref": "#/definitions/News"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updated news article"
            }
          }
        },
        "delete": {
          "summary": "Delete a news article by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "204": {
              "description": "No content"
            }
          }
        }
      },
      "/login": {
        "post": {
          "summary": "Logs in a user",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A JWT token",
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },
      "/register": {
        "post": {
          "summary": "Registers a new user",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "default": "user"
                  }
                },
                "required": ["username", "password"]
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User registered successfully",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User registered successfully"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      }
    },
    "definitions": {
      "News": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
  